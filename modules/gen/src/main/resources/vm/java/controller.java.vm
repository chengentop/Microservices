package ${packageName}.controller;

import java.util.List;

import org.springframework.web.bind.annotation.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import com.rufeng.core.framework.aspectj.lang.annotation.Log;
import com.rufeng.core.framework.aspectj.lang.enums.BusinessType;
import com.rufeng.core.framework.db.Pager;
import com.rufeng.core.framework.web.ResultData;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import ${packageName}.domain.po.${ClassName};
import ${packageName}.service.I${ClassName}Service;

/**
 * ${functionName}Controller
 *
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("/${moduleName}/${businessName}")
public class ${ClassName}Controller {
    private Logger log = LoggerFactory.getLogger(${ClassName}Controller.class);
    @Autowired
    private I${ClassName}Service ${className}Service;

    /**
     * 获取${functionName}详细信息
     */
    @GetMapping(value = "get/{${pkColumn.javaField}}")
    public ResultData getInfo(@PathVariable("${pkColumn.javaField}") ${pkColumn.javaType} ${pkColumn.javaField}) {
        log.debug("开始查询参数配置， ${pkColumn.javaField}=[{}].", ${pkColumn.javaField});
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        return ${className}Service.get(${pkColumn.javaField});
    }


    /**
     * 查询${functionName}列表
     */
    @RequestMapping(value = "/list", method = {RequestMethod.GET})
    #if($table.crud)
    public ResultData list(${ClassName} ${className}) {
        log.debug("开始根据条件{}查询参数配置, ${className}=[{}]", ${className});
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        return ${className}Service.list(${className});
    }
    #elseif($table.tree)
        // 后期添加
    #end

    /**
     * 分页查询${functionName}列表
     */
    @RequestMapping(value = "/list-by-page", method = {RequestMethod.GET})
    #if($table.crud)
    public ResultData listPager(${ClassName} ${className}, Pager page) {
        log.debug("开始根据条件{}分页查询参数配置, ${className}=[{}]",${className});
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        return ${className}Service.listPager(${className}, page);
    }
    #elseif($table.tree)
        // 后期添加
    #end

    /**
     * 新增${functionName}
     */
    @Log(title = "新增${functionName}", businessType = BusinessType.INSERT)
    @RequestMapping(value = "/add", method = {RequestMethod.POST})
    public ResultData add(@RequestBody ${ClassName} ${className}) {
        log.debug("开始添加新增${functionName}，${className}=[{}]", ${className});
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        return ${className}Service.add(${className});
    }

    /**
     * 修改${functionName}
     */
    @Log(title = "${functionName}", businessType = BusinessType.UPDATE)
    @RequestMapping(value = "/update", method = {RequestMethod.PUT})
    public ResultData edit(@RequestBody ${ClassName} ${className}) {
        log.debug("开始修改参数配置， ${className}=[{}]", ${className});
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        return ${className}Service.update(${className});
    }

    /**
     * 删除${functionName}
     */
    @Log(title = "${functionName}", businessType = BusinessType.DELETE)
    @RequestMapping(value = "/delete/{${pkColumn.javaField}}", method = {RequestMethod.DELETE})
    public ResultData remove(@PathVariable ${pkColumn.javaType} ${pkColumn.javaField}) {
        log.debug("开始删除${functionName}对象，${pkColumn.javaField}={}.", ${pkColumn.javaField});
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        return ${className}Service.delete(${pkColumn.javaField});
    }
}
