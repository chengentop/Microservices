package com.rufeng.system.business.service.impl;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import com.rufeng.common.core.db.Pager;
import com.rufeng.system.business.domain.po.SysLogininfor;
import com.rufeng.system.business.mapper.ISysLogininforDao;
import com.rufeng.system.business.service.ISysLogininforService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * 系统访问记录 服务接口实现
 *
 * @version v1.0.0
 * @auther chengen
 * @date 2020/12/18 18:24
 */
@Service
public class SysLogininforServiceImpl extends ServiceImpl<ISysLogininforDao, SysLogininfor> implements ISysLogininforService {
    private Logger log = LoggerFactory.getLogger(SysLogininforServiceImpl.class);
    @Autowired
    private ISysLogininforDao sysLogininforDao;

    @Override
    public SysLogininfor get(Integer infoid) throws Exception {
        log.debug("###[服务] 开始查询系统访问记录信息 infoid=[{}]. ", infoid);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        SysLogininfor logininfor = getById(infoid);
        log.info("###[服务] 完成查询系统访问记录信息 logininfor=[{}]", logininfor);
        return logininfor;
    }

    @Override
    public List<SysLogininfor> list(SysLogininfor logininfor) throws Exception {
        log.debug("###[服务] 开始根据条件{}查询系统访问记录信息,logininfor=[{}]", logininfor);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        QueryWrapper<SysLogininfor> queryWrapper = new QueryWrapper<>();
        queryWrapper.setEntity(logininfor);
        List<SysLogininfor> list = list(queryWrapper);
        log.info("###[服务] 完成分页查询系统访问记录信息 list=[{}]", list);
        return list;
    }

    @Override
    public IPage<SysLogininfor> listPager(SysLogininfor logininfor, Pager page) throws Exception {
        log.debug("###[服务] 开始根据条件分页查询系统访问记录信息,logininfor=[{}],page=[{}]", logininfor, page);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        Page<SysLogininfor> pageParam = new Page<>(page.getCurrentPage(), page.getTotalSize()); // 当前页码，每页条数
        QueryWrapper<SysLogininfor> queryWrapper = new QueryWrapper<>();
        queryWrapper.setEntity(logininfor);
        IPage<SysLogininfor> logininforIPage = page(pageParam, queryWrapper);
        log.info("###[服务] 完成分页查询系统访问记录信息 logininforIPage=[{}]", logininforIPage);
        return logininforIPage;
    }

    @Override
    public boolean saveLogininfor(SysLogininfor logininfor) throws Exception {
        log.debug("###[服务] 开始根据系统访问记录id保存系统访问记录信息 logininfor=[{}]", logininfor);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        boolean flag = save(logininfor);
        log.info("###[服务] 完成根据系统访问记录id保存系统访问记录信息 flag=[{}]", flag);
        return flag;
    }

    @Override
    public boolean updateLogininfor(SysLogininfor logininfor) throws Exception {
        log.debug("###[服务] 开始根据系统访问记录id{}更新系统访问记录信息 logininfor=[{}]", logininfor.getInfoid(), logininfor);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        boolean flag = updateById(logininfor);
        log.info("###[服务] 完成根据系统访问记录id更新系统访问记录信息 flag=[{}]", flag);
        return flag;
    }

    @Override
    public boolean deleteLogininfor(Integer infoid) throws Exception {
        log.debug("###[服务] 开始根据系统访问记录id删除系统访问记录信息 infoid=[{}]", infoid);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        boolean flag = removeById(infoid);
        log.info("###[服务] 完成根据系统访问记录id删除系统访问记录信息 flag=[{}]", flag);
        return flag;
    }

    @Override
    public boolean cleanLogininfor() {
        log.debug("###[服务] 开始清空登录日志表数据");

        return false;
    }
}
